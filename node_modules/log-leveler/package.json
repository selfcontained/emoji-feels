{
  "name": "log-leveler",
  "version": "0.1.1",
  "description": "calculate log levels from a set if enabled/disabled loggers",
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/selfcontained/log-leveler.git"
  },
  "keywords": [
    "logger",
    "log",
    "no levels"
  ],
  "author": {
    "name": "Brad Harris"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/selfcontained/log-leveler/issues"
  },
  "homepage": "https://github.com/selfcontained/log-leveler",
  "devDependencies": {
    "mocha": "^1.18.2",
    "chai": "^1.9.1"
  },
  "readme": "log-leveler\n================\n\nIf you're not particularly fond of log levels and would rather just toggle different loggers on and off, but utilize a logger library that requires levels, this library may be helpful.\n\n## Install\n\n```\nnpm install log-leveler\n```\n\n## Useage\n\nGiven a set of enabled/disabled loggers, log-leveler calculates your logger levels, and enabled level for you to feed into your favorite level-friendly logger.\n\n```javascript\nvar leveler = require('log-leveler');\n\nvar config = leveler({\n    info: true,\n    debug: false,\n    warn: true,\n    error: false,\n    brad: true,\n    gecko: false\n});\n\nconsole.log(config.levels);\n// { debug: 0, error: 1, gecko: 2, info: 3, warn: 4, brad: 5 }\n\nconsole.log(config.level);\n// info\n```\n\nDisabled loggers will be sorted to the lower levels, and your level will be set to the first enabled logger.\n\n\n### Example of using it with [winston](https://github.com/flatiron/winston):\n\n```javascript\nvar config = leveler({\n    info: true,\n    debug: false,\n    warn: true,\n    error: true\n});\n\napp.log = new (winston.Logger)({\n\tlevels: config.levels,\n\ttransports: [\n\t\tnew (winston.transports.Console)({\n\t\t\tlevel: config.level\n\t\t})\n\t]\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "log-leveler@0.1.1",
  "_from": "log-leveler@"
}
